{"meta":{"title":"汪浩然的博客","subtitle":null,"description":"","author":"wanghaoran","url":"https://wanghaoranv.github.io","root":"/"},"pages":[{"title":"About","date":"2020-02-17T12:22:25.000Z","updated":"2020-02-19T16:39:12.611Z","comments":true,"path":"about/index.html","permalink":"https://wanghaoranv.github.io/about/index.html","excerpt":"","text":"About me朋友你好，我叫汪浩然，目前仍是一名学生，专业通信工程平时热爱足球，有时间会看看书，对很多方面都比较感兴趣，但通常不能很深入了解学习这是我的缺点，正在逐渐改变 Blog关于搭建这个博客的初衷，是让自己学会总结并乐于分享交流，如果顺带能鞭策自己，再好不过日后的写作内容，作为技术型博客，尽量避免主观心情，以计算机通信领域为主，可能会包含一些足球比赛复盘/读书笔记/游记心得。由于知识水平实在有限，正在努力学习，读者发现错误望指正。只是，接下来的一年，时间会很紧张，希望自己能好好把握 目前博客的功能内容还很简陋，很多东西正在慢慢摸索完善…… 在偌大的世界中，如果你有缘看到了我写的这些话，不妨交个朋友吧 ↓"}],"posts":[{"title":"Hexo+Github搭建博客简易指南","slug":"Hexo-Github搭建博客简易指南","date":"2020-02-19T12:43:03.000Z","updated":"2020-02-21T12:18:53.586Z","comments":true,"path":"2020/02/19/Hexo-Github搭建博客简易指南/","link":"","permalink":"https://wanghaoranv.github.io/2020/02/19/Hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%AE%80%E6%98%93%E6%8C%87%E5%8D%97/","excerpt":"与其说是指南，不如说是自己搭建过程的总结，以及遇到问题的记录","text":"与其说是指南，不如说是自己搭建过程的总结，以及遇到问题的记录，因为这个博客采用了比较省事的搭建方式，自己也实在没有能力出一个完整的教程。 要想搭建一个博客，实际上就是一个网站，内容界面可以自己开发设计，重要的是，要获取个人独有的域名和提供响应服务器。因此，博客搭建大致分成两个部分，其一：在本地构建好网页，设计好界面；其二：将个人域名与网页绑定，推到远端服务器，让别人可以从互联网上访问。 网页网页一般可分为两种——静态网页和动态网页，静态网页并不是指没有动画的网页，而是指网页的所有内容文件直接存储保存在服务器上，每次用户发出访问请求，服务器无需编译，直接将文件内容加载到浏览器上显示出来，动态网页则不然，动态网页收到用户请求后，服务器上会运行程序，调用、生成一些内容（数据、页面文件……），然后返回给用户显示出结果，网页会根据用户的要求和选择而动态地改变和响应，不同人，不同时间访问，返回结果都不一定相同。 举个例子，本博客就是一个静态网页，不管谁访问都显示相同的内容，每次修改，都是直接在文件上改变，每次修改都需要重新发布（相当于覆盖）；而像学校的教务系统，微博等，不同用户、不同时候访问，其结果都不尽相同，是典型的动态网页，服务器端的程序会自动运行并更换内容（相当于调整）。 因此，静态网页把主要任务都交给用户端的浏览器加载，而动态网页对远端服务器的处理能力要求更高，两者最主要的区别是，是否在服务器上有程序运行。只有动态服务器才能使用数据库，因此能实现功能更多，如：用户注册，登录，订单管理等等，运用也更广泛，当然，动态静态并非互不相容，可以混合使用。还有，静态网页每个网页都有一个固定的URL,且网页URL以.htm、.html、.shtml等常见形式为后缀，不含有“？”。 服务器与域名回到博客的创建，我们需要一个服务器，服务器与我们平时使用的PC并无太大差别，只是更强调稳定性和性能，可以选择用一台闲置电脑，不过要保持一直开机，随时供人访问。还可以选择花钱购买云主机，像阿里云 、腾讯云 等，都提供了这样的服务。本博选择了一种免费的方式，就是利用代码协作开发平台，常见的有Github、码云Gitee等，这些平台就是代码仓库，人们将代码上传分享，可以将服务器托管在这些平台上。 除了服务器我们还需要一个没注册过的域名，当然每个人都希望自己的域名有个性一点，获取方式很简单，就是花钱买 又要买？，阿里云腾讯云也提供了这样的服务，也还有一种免费的方式，和前面一样，这些平台会提供给你一个域名，可以部分自己取，总之，这些平台还算稳定，也免费，对于搭建个人博客，足够使用。本博客托管在Github上，服务器在国外，国内访问速度会有影响，其他的一些国内平台速度会快一些。 网页框架搭建构建网页设计界面的过程，也就是常说的前端工程师完成的部分，本博客直接使用网上别人已经开发好的框架和主题。 常见的框架有： WordPress：动态框架，基于PHP语言 Heox：静态框架，基于JavaScript语言 Jekyll：静态框架，基于Ruby语言 Hugo：静态框架，基于Go语言 本博客采用Hexo框架，具体步骤官方网站上写得比较清楚Hexo官方文档，在这我就大致复盘一下，主要记录我遇到的问题 安装Hexo首先需要安装一些环境：Git:直接在官网下载，如果下载速度极慢，需要用到淘宝镜像源，具体地址官方文档有。Git到底是什么？我也没能太理解，似乎是一个分布式版本系统，可以控制代码版本，相当于作为仓库保存修改前修改后的内容。听职场程序员说，Git在工作中用处很大，很重要。下图是Git工作原理: 注：Workspace:工作区; Index:暂存区; Repository:本地仓库; Remote:远程仓库,图源知乎 Node.js：直接在官网下载，如果安装速度极慢，同样需要淘宝镜像源。Node.js 是Javascript（开发Web页面的脚本语言）的运行环境，是一个前端的框架，能够让JavaScript在服务端运行。 以上两个工具安装完成后，正式开始安装Hexo，具体步骤指令可参照官方文档。安装完成后，可以使用hexo s指令，利用本地服务器4000端口，测试加载情况，这时应看到初始的博客，后续的主题使用配置，可以在官网的主题页里进行选择。 Github众所周知Github是一款全球流行的同性交友软件，使用前需要绑定邮箱进行注册。注意，你注册的用户名，以后会用作域名的一部分，不要太随意就行。注册完成后新建一个仓库，仓库名一定要以：你的用户名.github.io 命名，否则不能成功，这就是你博客的域名。新建仓库后可以在Setting里设置发布，这时，你在网页上输入域名，就可以看到初始的页面。如果有能力可以在这个仓库里写进代码，自己设计创建网页，但这里我就导入前面部署好的Hexo框架。 配置SSH密钥两部分都准备好了之后，我们还要配置SSH密钥，具体含义我不太理解，这里直接放出网上找的资料： SSH是建立在应用层和传输层基础上的安全协议，其目的是专为远程登录会话和其他网络服务提供安全性的保障，用过SSH远程登录的人都比较熟悉，可以认为SSH是一种安全的Shell。 SSH登录是需要用户名和密码的，要实现无密码登录，就需要创建SSH 密钥（ssh key），SSH 密钥可以认为是和另一台电脑通信时的唯一的识别证，SSH 密钥对可以让我们方便的登录到 SSH 服务器，而无需输入密码——来源见文末[01] 使用配置的命令必须要在Git Bash中执行，首先执行ls -l ~/.ssh，检查密钥是否存在，然后执行ssh-keygen -t rsa -C &quot;your_email@example.com&quot;生成新的密钥，这里的邮箱是你注册Github时绑定的，运行过程要敲三次回车，回车实际上就是将密码之类的设为空。这时你的电脑会生成.ssh文件，可以到/.ssh目录（一般在C盘用户目录下，如果找不到可以在C盘直接搜索）下查看相关文件，一般来说ssh密钥会包含id_rsa和id_rsa.pub两个文件，分别表示生成的私钥和公钥。然后用记事本打开公钥id_rsa.pub，将所有内容，复制到Github &gt;Setting &gt;SSH and GPG keys 里，title随意取，key为刚复制的公钥，添加密钥。当中可能有一步要在Git Bash上绑定用户名和邮箱，具体情况视报错提示而定。 部署最后的部署要使用hexo-deployer-git插件，具体步骤和指令Hexo官方文档有，一键部署。之后同样根据文档修改配置就大功告成了。使用的主题样式可以自由选择，很多功能还要自己慢慢摸索，以后也可以学习前端的知识修改别人的主题，自己设计。 如果读者发现了错误，可以联系我指正，相互交流这是第一篇长文，可真难写啊 参考资料[01]. https://www.jianshu.com/p/7aba9b127cb8[02]. https://www.jianshu.com/p/c9295bacd98b[03]. Hexo官方文档[04]. CSDN[05]. 百度百科[06]. B站CodeSheep[07]. B站hujun_cn","categories":[{"name":"指南","slug":"指南","permalink":"https://wanghaoranv.github.io/categories/%E6%8C%87%E5%8D%97/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://wanghaoranv.github.io/tags/Hexo/"},{"name":"网页","slug":"网页","permalink":"https://wanghaoranv.github.io/tags/%E7%BD%91%E9%A1%B5/"},{"name":"博客搭建","slug":"博客搭建","permalink":"https://wanghaoranv.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]},{"title":"写在前面","slug":"写在前面","date":"2020-02-17T16:00:00.000Z","updated":"2020-02-21T12:11:56.263Z","comments":true,"path":"2020/02/18/写在前面/","link":"","permalink":"https://wanghaoranv.github.io/2020/02/18/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/","excerpt":"","text":"写在博客创建之初就像每本书都有它的前言，自己的博客也在创建之初写下一些话吧。很久前就想创建博客，去年有幸接触了一群已经身在职场的程序员，第一次看到别人精致、有态度的博客，更加坚定了自己搭建的想法。搭建的过程比较曲折，问题不断，好在最近时间充裕，慢慢修改，最终还是有了结果。其实回头来看，创建的过程远比现在写内容有意思的多，希望自己能一直坚持更新，虽然以后也不一定能从事代码有关的工作，但生活总是自己的，值得永远学习探索。平日里虽也时不时写点东西，但文笔依旧很烂，只能追求每一篇博文尽量表达清楚。我深知博客是别人看的，有价值的内容是重中之重，无奈目前才疏学浅，就暂且把这儿当作学习知识的踩坑记录吧。另外，本博客暂时是托管在Github上，国内访问速度比较慢，未来可能会找机会购买域名和服务器，进行迁移。 真的很喜欢当年明月先生《明朝那些事儿》结尾的那段话，放在这里： 此前，我讲过很多东西，很多兴衰起落、很多王侯将相、很多无奈更替、很多风云变幻，但这件东西，我个人认为，是最重要的。因为我要告诉你，所谓千秋霸业，万古流芳，以及一切的一切，只是粪土。先变成粪，再变成土。现在你不明白，将来你会明白，将来不明白，就再等将来，如果一辈子都不明白，也行。而最后讲述的这件东西，它超越上述的一切，至少在我看来。但这件东西，我想了很久，也无法用准确的语言，或是词句来表达，用最欠揍的话说，是只可意会，不可言传。然而我终究是不欠揍的，在遍阅群书，却无从开口之后，我终于从一本不起眼，且无甚价值的读物上，找到了这句适合的话。这是一本台历，一本放在我面前，不知过了多久，却从未翻过，早已过期的台历。我知道，是上天把这本台历放在了我的桌前，它看着几年来我每天的努力，始终的坚持，它静静地，耐心地等待着终结。它等待着，在即将结束的那一天，我将翻开这本陪伴我始终，却始终未曾翻开的台历，在上面，有着最后的答案。我翻开了它，在这本台历上，写着一句连名人是谁都没说明白的名人名言。是的，这就是我想说的，这就是我想通过徐霞客所表达的，足以藐视所有王侯将相，最完美的结束语：成功只有一个——按照自己的方式，去度过人生。 当年明月—— 《明朝那些事儿》 祝愿我能用短暂的生命，去贴一贴这个星球的嶙峋一角。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://wanghaoranv.github.io/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"写在前面","slug":"写在前面","permalink":"https://wanghaoranv.github.io/tags/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-02-15T16:00:00.000Z","updated":"2020-02-18T09:03:32.452Z","comments":true,"path":"2020/02/16/hello-world/","link":"","permalink":"https://wanghaoranv.github.io/2020/02/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. 你好，欢迎来到我的博客Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}